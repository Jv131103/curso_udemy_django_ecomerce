                    Criando o projeto e-commerce no VSCode


1 - Crie seu ambiente virtual ou o ative

    # Criar:
    python -m venv venv

    # Acessar:
    . venv/bin/activate  # Linux/Mac

    .\venv/Scripts/activate  # Windows

2 - Baixe o Django ou o requirements.txt dentro do ambiente virtual

    pip install django

    pip install -r requirements.txt


3 - Crie o projeto chamado loja:

    django-admin startproject loja .

4 - Inicie os seguintes apps:

    # Iniciando os apps
    python manage.py startapp produto
    python manage.py startapp pedido
    python manage.py startapp perfil

    # Realizando a checagem, se retornar 0, está ok
    python manage.py check

    # Realizando as migrações
    python manage.py makemigrations
    python manage.py migrate

    # Criando o superusuário
    python manage.py createsuperuser
    Username (leave blank to use 'debianjv'): debianjv
    Email address: debianjv@email.com
    Password: db@acessJvA123

    # Rodando o projeto
    python manage.py runserver

5 - Agra em settings.py de loja, vamos alterar ele:

    """
    Django settings for loja project.

    Generated by 'django-admin startproject' using Django 5.2.4.

    For more information on this file, see
    https://docs.djangoproject.com/en/5.2/topics/settings/

    For the full list of settings and their values, see
    https://docs.djangoproject.com/en/5.2/ref/settings/
    """

    from pathlib import Path

    from django.contrib.messages import constants

    # Build paths inside the project like this: BASE_DIR / 'subdir'.
    BASE_DIR = Path(__file__).resolve().parent.parent


    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = 'django-insecure-^@hg!m+#6aza^fp7^lx8*fwjfg=f)h4dp__8f_3kh62vmkb8xg'

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = []


    # Application definition

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        # TODO: Remover debug toolbar - Ele só serve para debugs
        'debug_toolbar'
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
        # TODO: Remover debug toolbar - Ele só serve para debugs
        'debug_toolbar.middleware.DebugToolbarMiddleware'
    ]

    ROOT_URLCONF = 'loja.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [
                BASE_DIR / "templates"
            ],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'loja.wsgi.application'


    # Database
    # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


    # Password validation
    # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]


    # Internationalization
    # https://docs.djangoproject.com/en/5.2/topics/i18n/

    LANGUAGE_CODE = 'pt-BR'

    TIME_ZONE = 'America/Sao_Paulo'

    USE_I18N = True

    USE_TZ = True


    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/5.2/howto/static-files/

    STATIC_URL = 'static/'
    STATIC_ROOT = BASE_DIR / "static"
    STATICFILES_DIRS = [
        BASE_DIR / "templates" / "static",  # Para uso no desenvolvimento
    ]

    # Default primary key field type
    # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

    # Definindo a Media
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media'

    # Definindo mensagens do Django
    MESSAGE_TAGS = {
        constants.DEBUG: 'alert-info',
        constants.ERROR: 'alert-danger',
        constants.INFO: 'alert-info',
        constants.SUCCESS: 'alert-success',
        constants.WARNING: 'alert-warning',
    }

    # Configurando Sessão
    # Sessão em dias: 60s * 60m * 24h * 1d
    SESSION_COOKIE_AGE = 60 * 60 * 24 * 7
    # Salvar cada sessão
    SESSION_SAVE_EVERY_REQUEST = False
    # Serializer - Padrão Json
    # SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickeSerializer'

    # Configurando IPS para debug
    # TODO: Remover debug toolbar
    INTERNAL_IPS = [
        '127.0.0.1',
    ]

6 - Agra em urls.py de loja, vamos adicionar:

    from django.conf import settings  # <-- IMPORTANTE!
    from django.conf.urls.static import \
        static  # Se quiser servir mídia/estática em DEBUG
    from django.contrib import admin
    from django.urls import include, path

    urlpatterns = [
        path('admin/', admin.site.urls),
    ] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

    # TODO: Remover debug toolbar
    if settings.DEBUG:
        import debug_toolbar
        urlpatterns = [
            path('__debug__/', include(debug_toolbar.urls)),
        ] + urlpatterns

