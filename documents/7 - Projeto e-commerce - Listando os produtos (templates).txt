        Projeto e-commerce - Listando os produtos (templates)

Em templates vamos criar algumas coisas:

    . Crie uma pasta parciais.html:

        . Crie os arquivo _carrinho.html:

            {% load static %}
            {% load omfilters %}

            <div class="table-responsive">
                <table class="table">
                    <tr>
                        <th class="d-none d-lg-block">Imagem</th>
                        <th>Produto</th>
                        <th>V.</th>
                        <th>QTD.</th>
                        <th>Total</th>
                    </tr>

                    {% for linha in carrinho.values %}
                    <tr>
                        <td class="d-none d-lg-block">
                            <img class="cart-img" src="{% get_media_prefix %}{{ linha.imagem }}">
                        </td>
                        <td>
                            <a href="{% url 'produto:detalhe' linha.slug %}">
                                {{ linha.produto_nome }}
                            </a>

                            <a class="ml-3" href="{% url 'produto:removerdocarrinho' %}?vid={{ linha.variacao_id }}">
                                <i class="fas fa-times-circle text-danger" aria-hidden="true"></i>
                            </a>
                        </td>
                        <td>{{ linha.variacao_nome }}</td>
                        <td>
                            {{ linha.quantidade }} x
                            {% if linha.preco_unitario_promocional %}
                            {{ linha.preco_unitario_promocional }}
                            {% else %}
                            {{ linha.preco_unitario }}
                            {% endif %}
                        </td>

                        {% if linha.preco_quantitativo_promocional %}
                        <td>{{ linha.preco_quantitativo_promocional|formata_preco }}</td>
                        {% else %}
                        <td>{{ linha.preco_quantitativo|formata_preco }}</td>
                        {% endif %}

                    </tr>
                    {% endfor %}


                </table>
            </div>

        . Crie o arquivo _footer.html:

            {% load static %}

            <footer class="container-fluid bg-primary">
                <div class="container text-light">
                    <div class="row">
                        <div class="col">
                            <div class="p-1">
                                <span class="align-middle p-1">Feito com Django</span>
                            </div>
                        </div>
                        <div class="col">
                            <div class="p-1 text-right">
                                <span class="align-middle p-1">Por Luiz Otávio</span>
                            </div>
                        </div>
                    </div>
                </div>
            </footer>

            <script src="{% static 'assets/bootstrap/js/jquery-3.2.1.slim.min.js'%}"></script>
            <script src="{% static 'assets/bootstrap/js/popper.min.js'%}"></script>
            <script src="{% static 'assets/bootstrap/js/bootstrap.min.js'%}"></script>
            <script defer src="{% static 'assets/font-awesome/js/all.js'%}"></script>
            <script src="{% static 'assets/custom/js/scripts.js'%}"></script>

        . Crie o arquivo _head.html:

            {% load static %}

            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

            <link rel="stylesheet" href="{% static 'assets/bootstrap/css/bootstrap.css'%}">
            <link rel="stylesheet" href="{% static 'assets/custom/css/style.css'%}">

        . Crie o arquivo _messages.html:

            {% if messages %}
                <br>
                {% for message in messages %}
                    <div class="alert {{ message.tags }}" role="alert">
                        {{ message }}
                    </div>
                {% endfor %}
            {% endif %}

        . Crei o arquivo _nav.html:

            <nav class="navbar navbar-dark bg-primary navbar-expand-lg">
                <a class="navbar-brand" href="index.html">Navbar</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
                    aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav ml-auto">
                        <li class="nav-item active">
                            <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Link</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Dropdown
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                <a class="dropdown-item" href="#">Action</a>
                                <a class="dropdown-item" href="#">Another action</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" href="#">Something else here</a>
                            </div>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link disabled" href="#">Disabled</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link nav-cart-link active" href="#">
                                <span class="nav-cart-text mr-1">
                                    Carrinho
                                </span>
                                <span class="nav-cart-count mr-1">
                                    <strong>109x</strong>
                                </span>
                                <span class="nav-cart-icon mr-2">
                                    <i class="fas fa-shopping-cart"></i>
                                </span>
                            </a>
                        </li>
                    </ul>
                    <form class="form-inline my-2 my-lg-0">
                        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
                    </form>
                </div>
            </nav>

        . Crie o arquivo _pagination.html:

            {% if is_paginated %}

            <div class="col mt-3 mb-3">
                <div class="row">
                    <div class="pagination">
                        <ul class="pagination">
                            {% if page_obj.has_previous %}
                            <li class="page-item">
                                <a class="page-link" href="?page=1">&laquo;</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="?page={{ page_obj.previous_page_number }}">&lsaquo;</a>
                            </li>
                            {% endif %}

                            {% for num in page_obj.paginator.page_range %}

                            {% if page_obj.number == num %}
                            <li class="page-item active">
                                <a class="page-link" href="?page={{ num }}">{{ num }}</a>
                            </li>
                            {% elif num > page_obj.number|add:'-3' and num < page_obj.number|add:'3' %}
                            <li class="page-item">
                                <a class="page-link" href="?page={{ num }}">{{ num }}</a>
                            </li>
                            {% endif %}

                            {% endfor %}

                            {% if page_obj.has_next %}
                            <li class="page-item">
                                <a class="page-link" href="?page={{ page_obj.next_page_number }}">&rsaquo;</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="?page={{ page_obj.paginator.num_pages }}">&raquo;</a>
                            </li>
                            {% endif %}
                        </ul>
                    </div>
                </div>
            </div>
            {% endif %}

        . Crie o arquivo _pedido.html:

            {% load static %}
            {% load omfilters %}

            <div class="row">
                <div class="col">
                    <h3>{{ pedido }}</h3>

                    <div class="row mt-4">
                        <div class="col-lg-2 font-weight-bold">Número do pedido:</div>
                        <div class="col-lg-4">{{ pedido.id }}</div>
                        <div class="col-lg-2 font-weight-bold">Total a pagar:</div>
                        <div class="col-lg-4">{{ pedido.total|formata_preco }}</div>

                        <div class="col-lg-2 font-weight-bold">QTD. Itens:</div>
                        <div class="col-lg-4">{{ pedido.qtd_total }}</div>
                        <div class="col-lg-2 font-weight-bold">Status:</div>
                        <div class="col-lg-4">{{ pedido.get_status_display }}</div>
                    </div>

                    <div class="row mt-4">
                        <div class="col">
                            <h3>Produtos</h3>
                        </div>
                    </div>

                    <div class="table-responsive mt-3">
                        <table class="table">
                            <tr>
                                <th class="d-none d-lg-block">Imagem</th>
                                <th>Produto</th>
                                <th>V.</th>
                                <th>QTD.</th>
                                <th>Total</th>
                            </tr>

                            {% for linha in pedido.itempedido_set.all %}
                            <tr>
                                <td class="d-none d-lg-block">
                                    <img class="cart-img" src="{% get_media_prefix %}{{ linha.imagem }}">
                                </td>
                                <td>{{ linha.produto }}</td>
                                <td>{{ linha.variacao }}</td>
                                <td>{{ linha.quantidade }}</td>
                                <td>
                                    {% if linha.preco_promocional %}
                                    {{ linha.preco_promocional|formata_preco }}
                                    {% else %}
                                    {{ linha.preco|formata_preco }}
                                    {% endif %}
                                </td>
                            </tr>
                            {% endfor %}

                        </table>
                    </div>
                </div>
            </div>

    . Em static, crie a pasta chamada assets

        Acesse o link https://github.com/luizomf/django-simple-ecommerce/tree/master/templates/static/assets 
        e coloque esses diretórios junto com o arquivo dentro de static
    
    . Na raiz de templates, crie o arquivo chamado 404.html:

            <!doctype html>
            <html lang="pt-BR">

            <head>
                <title>404</title>
            </head>

            <body>
            <p>Página não encontrada</p>
            </body>

            </html>

    . Na raiz de templates, crie o arquivo chamado base.html:

        <!doctype html>
        <html lang="pt-BR">

        <head>
            {% include 'parciais/_head.html' %}
            <title>{% block titulo %}{% endblock %}E-commerce</title>
        </head>

        <body>
            {% include 'parciais/_nav.html' %}

            <main class="container mt-4 mb-4">
                {% include 'parciais/_messages.html' %}
                {% block conteudo %}{% endblock %}
            </main>

            {% include 'parciais/_footer.html' %}

        </body>

        </html>

Em produto, vamos fazer o seguinte:

    . Crie um diretório chamado templates e um subdiretório chamado produto e nele
    crie o arquivo chamado lista.html:

        {% extends 'base.html' %}
        {% load omfilters %}

        {% block titulo %}Produtos | {% endblock %}

        {% block conteudo %}

        <div class="row">
            <div class="col-lg-12">
                <div class="card-columns">

                    {% for produto in produtos %}

                    <div class="card">

                        {% if produto.imagem %}
                        <a href="{% url 'produto:detalhe' produto.slug %}">
                            <img class="card-img-top" src="{{ produto.imagem.url }}" alt="{{ produto.nome }}">
                        </a>
                        {% endif %}

                        <div class="card-body">
                            <h5 class="card-title">{{ produto.nome }}</h5>
                            <p class="card-text">{{ produto.descricao_curta }}</p>
                            <div class="container product-price-block text-center">

                                {% if produto.preco_marketing_promocional %}
                                <span class="product-price">
                                    {{ produto.preco_marketing_promocional|formata_preco }}
                                </span>
                                <span class="product-old-price text-muted">
                                    {{ produto.preco_marketing|formata_preco }}
                                </span>
                                {% else %}
                                <span class="product-price">
                                    {{ produto.preco_marketing|formata_preco }}
                                </span>
                                {% endif %}

                            </div>
                        </div>
                        <div class="card-footer bg-transparent border-top-light-custom text-center">
                            <a href="{% url 'produto:detalhe' produto.slug %}" class="btn btn-primary btn-sm m-1 btn-block">
                                <i class="fa fa-shopping-cart" aria-hidden="true"></i>
                                Comprar
                            </a>
                        </div>
                    </div>

                    {% endfor %}
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col">
                {% include 'parciais/_pagination.html' %}
            </div>
        </div>

        {% endblock %}

    . Crie o diretório na raiz de produto chamado de templatetags e nele crie o arquivo chamado
    omfilters.py e um __init__.py:

        omfilters.py:

            from django.template import Library

            from utils import utils

            register = Library()


            @register.filter
            def formata_preco(val):
                return utils.formata_preco(val)

    . E em views.py de produto, vamos realizar:

        from django.http import HttpResponse
        from django.shortcuts import render
        from django.views import View
        from django.views.generic.list import ListView

        from . import models


        # Create your views here.
        class ListaProdutos(ListView):
            model = models.Produto
            template_name = "produto/lista.html"
            context_object_name = "produtos"
            paginate_by = 10


        class DetalheProduto(View):
            def get(self, *args, **kwargs):
                return HttpResponse('DetalheProduto')


        class AdicionarAoCarrinho(View):
            def get(self, *args, **kwargs):
                return HttpResponse('AdicionarAoCarrinho')


        class RemoverDoCarrinho(View):
            def get(self, *args, **kwargs):
                return HttpResponse('RemoverDoCarrinho')


        class Carrinho(View):
            def get(self, *args, **kwargs):
                return HttpResponse('Carrinho')


        class Finalizar(View):
            def get(self, *args, **kwargs):
                return HttpResponse('Finalizar')

    . E em models.py, vamos realizar:

        import os

        from django.conf import settings
        from django.db import models
        from django.utils.text import slugify
        from PIL import Image

        from utils import utils

        # Create your models here.

        class Produto(models.Model):
            nome = models.CharField(max_length=255)
            descricao_curta = models.TextField(max_length=255)
            descricao_longa = models.TextField()
            imagem = models.ImageField(
                upload_to="produto_imagens/%Y/%m/", blank=True, null=True
            )
            slug = models.SlugField(unique=True, blank=True, null=True)
            preco_marketing = models.FloatField(default=0, verbose_name="preco")
            preco_marketing_promocional = models.FloatField(
                default=0, verbose_name="preco_promocao"
            )
            tipo = models.CharField(
                default="V",
                max_length=1,
                choices=(
                    ("V", "Variável"),
                    ("S", "Simples"),
                )
            )

            def __str__(self) -> str:
                return self.nome

            def get_preco_formatado(self):
                return utils.formata_preco(self.preco_marketing)
            get_preco_formatado.short_description = "PREÇO"

            def get_preco_promo_formatado(self):
                return utils.formata_preco(self.preco_marketing_promocional)
            get_preco_promo_formatado.short_description = "PREÇO PROMOSSIONAL"

            @staticmethod
            def resize_image(original_img, new_width=800):
                img_full_path = os.path.join(settings.MEDIA_ROOT, original_img.name)
                img_pil = Image.open(img_full_path)

                original_width, original_height = img_pil.size
                new_height = round((new_width * original_height) / original_width)

                if new_width >= original_width:
                    img_pil.close()
                    return

                nova_imagem = img_pil.resize(
                    (new_width, new_height), Image.Resampling.LANCZOS
                )
                nova_imagem.save(img_full_path, optimize=True, quality=60)
                img_pil.close()

            def save(self, *args, **kwargs):
                if not self.slug:
                    slug = f"{slugify(self.nome)}"
                    self.slug = slug

                super().save(*args, **kwargs)

                img_max_width = 800

                if self.imagem:
                    self.resize_image(self.imagem, img_max_width)


        class Variacao(models.Model):
            produto = models.ForeignKey(Produto, on_delete=models.CASCADE)
            name = models.CharField(max_length=50, blank=True, null=True)
            preco = models.FloatField(default=0)
            preco_promocional = models.FloatField(default=0)
            estoque = models.PositiveIntegerField(default=1)

            def __str__(self) -> str:
                return self.name or self.produto.nome

            class Meta:
                verbose_name = "Variação"
                verbose_name_plural = "Variações"
