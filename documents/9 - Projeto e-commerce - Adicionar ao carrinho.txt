                    Projeto e-commerce - Adicionar ao carrinho

Em _nav.html de templates, vamos alterar:

    <nav class="navbar navbar-dark bg-primary navbar-expand-lg">
        <a class="navbar-brand" href="{% url "produto:lista" %}">E-commerce</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Dropdown
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled" href="#">Disabled</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link nav-cart-link active" href="#">
                        <span class="nav-cart-text mr-1">
                            Carrinho
                        </span>
                        <span class="nav-cart-count mr-1">
                            <strong>109x</strong>
                        </span>
                        <span class="nav-cart-icon mr-2">
                            <i class="fas fa-shopping-cart"></i>
                        </span>
                    </a>
                </li>
            </ul>
            <form class="form-inline my-2 my-lg-0">
                <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
            </form>
        </div>
    </nav>

Em views.py de produto vamos Adicionar:

    from django.contrib import messages
    from django.db.models import Q
    from django.http import HttpResponse
    from django.shortcuts import get_object_or_404, redirect, render
    from django.urls import reverse
    from django.views import View
    from django.views.generic.detail import DetailView
    from django.views.generic.list import ListView

    from perfil.models import Perfil

    from . import models


    # Create your views here.
    class ListaProdutos(ListView):
        model = models.Produto
        template_name = "produto/lista.html"
        context_object_name = "produtos"
        paginate_by = 10


    class DetalheProduto(DetailView):
        model = models.Produto
        template_name = "produto/detalhe.html"
        context_object_name = "produto"
        slug_url_kwarg = "slug"


    class AdicionarAoCarrinho(View):
        def get(self, *args, **kwargs):
            http_referer = self.request.META.get(
                "HTTP_REFERER",
                reverse("produto:lista")
            )
            variacao_id = self.request.GET.get("vid")

            if not variacao_id:
                messages.error(
                    self.request,
                    "Produto Não Encontrado!"
                )
                return redirect(http_referer)

            variacao = get_object_or_404(models.Variacao, id=variacao_id)

            variacao_estoque = variacao.estoque

            produto = variacao.produto
            produto_id = produto.id
            produto_nome = produto.nome
            variacao_nome = variacao.name or ''
            preco_unitario = variacao.preco
            preco_unitario_promocional = variacao.preco_promocional
            quantidade = 1
            slug = produto.slug
            imagem = produto.imagem

            if imagem:
                imagem = imagem.name
            else:
                imagem = ''

            if variacao.estoque < 1:
                messages.error(
                    self.request,
                    "Estoque insuficiente!"
                )
                return redirect(http_referer)

            if not self.request.session.get("carrinho"):
                self.request.session['carrinho'] = {}
                self.request.session.save()

            carrinho = self.request.session["carrinho"]

            if variacao_id in carrinho:
                # TODO: Variação existe no carrinho
                quantidade_carrinho = carrinho[variacao_id]['quantidade']
                quantidade_carrinho += 1

                if variacao_estoque < quantidade_carrinho:
                    messages.warning(
                        self.request,
                        f'Estoque insuficiente para {quantidade_carrinho}x no '
                        f'produto "{produto_nome}". Adicionamos {variacao_estoque}x '
                        f'no seu carrinho.'
                    )
                    quantidade_carrinho = variacao_estoque

                carrinho[variacao_id]['quantidade'] = quantidade_carrinho
                carrinho[variacao_id]['preco_quantitativo'] = preco_unitario * \
                    quantidade_carrinho
                carrinho[variacao_id]['preco_quantitativo_promocional'] = preco_unitario_promocional * \
                    quantidade_carrinho
            else:
                # TODO: Variação não existe no carrinho
                carrinho[variacao_id] = {
                    'produto_id': produto_id,
                    'produto_nome': produto_nome,
                    'variacao_nome': variacao_nome,
                    'variacao_id': variacao_id,
                    'preco_unitario': preco_unitario,
                    'preco_unitario_promocional': preco_unitario_promocional,
                    'preco_quantitativo': preco_unitario,
                    'preco_quantitativo_promocional': preco_unitario_promocional,
                    'quantidade': 1,
                    'slug': slug,
                    'imagem': imagem,
                }

            self.request.session.save()

            messages.success(
                self.request,
                f'Produto {produto_nome} {variacao_nome} adicionado ao seu '
                f'carrinho {carrinho[variacao_id]["quantidade"]}x.'
            )

            return redirect(http_referer)


    class RemoverDoCarrinho(View):
        def get(self, *args, **kwargs):
            return HttpResponse('RemoverDoCarrinho')


    class Carrinho(View):
        def get(self, *args, **kwargs):
            contexto = {
                'carrinho': self.request.session.get('carrinho', {})
            }

            return render(self.request, 'produto/carrinho.html', contexto)


    class Finalizar(View):
        def get(self, *args, **kwargs):
            return HttpResponse('Finalizar')


E em carrinho.html de produto, vamos utilizar:

    {% extends "base.html" %}

    {% block conteudo %}
        {{ request.session.carrinho }}
    {% endblock conteudo %}
